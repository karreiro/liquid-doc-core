// Main rule
Document = { ImplicitDescription ~ (WhitespaceNode | LiquidDocNode | TextNode)* }

LiquidDocNode = {
    paramNode
  | exampleNode
  | descriptionNode
  | promptNode
  | fallbackNode
}

endOfDescription = { strictSpace* ~ openControl }
descriptionContent = { (!endOfDescription ~ ANY)* }
ImplicitDescription = { descriptionContent }

// Space definitions
strictSpace = _{ " " | "\t" }
space = _{ strictSpace | NEWLINE }
openControl = { strictSpace* ~ (tagStart | EOI) }
supportedTags = { "@prompt" | "@example" | "@description" | "@param" }
tagStart = { "@prompt" | "@example" | "@description" | "@param"| "@" ~ !ASCII_ALPHANUMERIC }
WhitespaceNode = _{ space+ }

// Parameter node rules
paramNode = { "@param" ~ strictSpace* ~ paramType? ~ strictSpace* ~ (optionalParamName | paramName) ~ (strictSpace* ~ "-")? ~ strictSpace* ~ paramDescription }
paramType = { "{" ~ strictSpace* ~ paramTypeContent ~ strictSpace* ~ "}" }
paramTypeContent = { (!(("}" | strictSpace)) ~ ANY)* }

paramName = { textValue }
optionalParamName = { "[" ~ strictSpace* ~ textValue ~ strictSpace* ~ "]" }
textValue = { identifierCharacter+ }

paramDescription = { (!"]" ~ (!endOfParam ~ ANY)*) }
endOfParam = { strictSpace* ~ (NEWLINE | EOI) }

// Content node rules
promptNode = { "@prompt" ~ multilineTextContent }
exampleNode = { "@example" ~ space* ~ multilineTextContent }
descriptionNode = { "@description" ~ space* ~ multilineTextContent }

multilineTextContent = { (!endOfMultilineText ~ ANY)* }
endOfMultilineText = { strictSpace* ~ (supportedTags | EOI) }

fallbackNode = { "@" ~ (!endOfParam ~ ANY)* }

// Helper rules (assuming these are defined in the Helpers parent grammar)
TextNode = { (!openControl ~ ANY)+ }
identifierCharacter = @{ ASCII_ALPHANUMERIC | "_" | "-" }
